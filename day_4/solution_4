#!/bin/bash

# BashBlaze Scripting Challenge - Day 4
# Monitor and manage a specific process to ensure it stays running

# Constants
MAX_RESTART_ATTEMPTS=3           # Maximum number of restart attempts before notifying
RESTART_ATTEMPTS=0               # Counter for restart attempts

# Function to check if the process is running
check_process() {
    local process_name=$1
    pgrep -x "$process_name" > /dev/null
    if [ $? -eq 0 ]; then
        echo "[INFO] Process '$process_name' is running."
        return 0
    else
        echo "[WARNING] Process '$process_name' is not running."
        return 1
    fi
}

# Function to restart the process
restart_process() {
    local process_name=$1
    echo "[INFO] Attempting to restart '$process_name'."
    $process_name &
    sleep 2
    check_process "$process_name"
    if [ $? -eq 0 ]; then
        echo "[INFO] Successfully restarted '$process_name'."
        RESTART_ATTEMPTS=0
    else
        ((RESTART_ATTEMPTS++))
        echo "[ERROR] Failed to restart '$process_name'. Attempt $RESTART_ATTEMPTS/$MAX_RESTART_ATTEMPTS."
        if [ $RESTART_ATTEMPTS -ge $MAX_RESTART_ATTEMPTS ]; then
            notify_admin "$process_name"
        fi
    fi
}

# Function to notify the administrator
notify_admin() {
    local process_name=$1
    echo "[ALERT] Process '$process_name' requires manual intervention after $MAX_RESTART_ATTEMPTS failed attempts."
    # Example notification logic (e.g., email):
    # echo "Process '$process_name' failed to restart after $MAX_RESTART_ATTEMPTS attempts." | mail -s "Process Alert" admin@example.com
}

# Main script
if [ $# -ne 1 ]; then
    echo "Usage: $0 <process_name>"
    exit 1
fi

PROCESS_NAME=$1

# Check if the process is running, restart if not
check_process "$PROCESS_NAME"
if [ $? -ne 0 ]; then
    restart_process "$PROCESS_NAME"
fi
